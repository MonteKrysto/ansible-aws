---
  - name: create EC2 instance
    hosts: local
    # connection: local
    gather_facts: False
    # tags: provision

    vars:
      aws_access_key: "AKIAJJIW4ONZ4ANYJNZA"
      aws_secret_key: "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"
      ansible_python_interpreter: "/usr/bin/env python3"
      instance_type: t2.micro
      security_group: postgres
      image: ami-4e79ed36 # Ubuntu 16.04 LTS image
      keypair: ec2_config
      region: us-west-2
      count: 1

    tasks:
      # - name: Create security group
      #   local_action:
      #     module: ec2_group
      #     name: "{{ security_group }}"
      #     description: Security Group for webserver Srvrs
      #     region: "{{ region }}"
      #     rules:
      #       - proto: tcp
      #         from_port: 22
      #         to_port: 22
      #         cidr_ip: 0.0.0.0/0
      #       - proto: tcp
      #         from_port: 80
      #         to_port: 80
      #         cidr_ip: 0.0.0.0/0
      #       - proto: tcp
      #         from_port: 442
      #         to_port: 442
      #         cidr_ip: 0.0.0.0/0
      #     rules_egress:
      #       - proto: all
      #         cidr_ip: 0.0.0.0/0
      #   register: basic_firewall

      - name: Launch EC2 instance
        local_action: ec2
          group={{ security_group }}
          instance_type={{ instance_type}}
          image={{ image }}
          wait=true
          region={{ region }}
          keypair={{ keypair }}
          count={{ count }}
        register: ec2

      - name: Add new instances to local host group
        local_action: lineinfile
          dest="./hosts"
          regexp={{ item.public_ip }}
          insertafter="[webserver]" line={{ item.public_ip }}
        with_items: "{{ ec2.instances }}"

      - name: wait for SSH
        local_action: wait_for
          host={{ item.public_ip }}
          port=22
          state=started
        with_items: "{{ ec2.instances }}"

      - name: Add tag to instances
        local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
        with_items: "{{ ec2.instances }}"
        args:
          tags:
            Name: webserver

